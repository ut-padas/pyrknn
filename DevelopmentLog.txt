NOTE: Neighbors are not returned as numpy structured array because:
1) CuPy does not support them
2) This might make unpacking them for our custom kernels a challenge

Needed Quality of Life Improvements:
1) Handle module imports at the __init__.py level. (so we don't have to write .core or .kdforest.reference after everything)
2) Write __str__ functions for trees and forests (for debugging)
3) GLOB *.cu files in makefile so each ones doesn't have to be added manually
4) Write intermediate layer in kernel/ that dispatches based on numpy or cupy array

Questions:
1) How should merge neighbors behave when k < leafsize?
2) Is there a usecase for a merged build/all-NN in the taskgraph? i.e. Leaf search tasks generated as soon as leaf is built.
3) How will cuda streams be handled? Create as locally as necessary? Will tasks share any of them?
